-- Migration 006: Create context_units table
-- Context units are structured information units extracted from any source

CREATE TABLE IF NOT EXISTS context_units (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  organization_id UUID REFERENCES organizations(id) ON DELETE CASCADE,

  -- Source metadata
  source_type VARCHAR(50) NOT NULL,         -- "email", "api", "file", "webhook"
  source_id VARCHAR(255),                   -- Email message ID, API request ID, file path, etc.
  source_metadata JSONB,                    -- Full source data (from, to, subject, etc.)

  -- Context unit content (generated by LLM)
  title TEXT,
  summary TEXT,
  tags TEXT[],
  atomic_statements JSONB,                  -- Ordered array of statement objects

  -- Processing status
  status VARCHAR(50) DEFAULT 'pending',     -- 'pending', 'processing', 'completed', 'failed'
  error TEXT,

  -- Timestamps
  created_at TIMESTAMP DEFAULT NOW(),
  processed_at TIMESTAMP,

  -- Optional: Vector storage reference
  qdrant_point_id UUID
);

-- Constraint: source_type validation
ALTER TABLE context_units ADD CONSTRAINT source_type_valid
  CHECK (source_type IN ('email', 'api', 'file', 'webhook'));

-- Constraint: status validation
ALTER TABLE context_units ADD CONSTRAINT status_valid
  CHECK (status IN ('pending', 'processing', 'completed', 'failed'));

-- Indexes
CREATE INDEX idx_context_units_org ON context_units(organization_id);
CREATE INDEX idx_context_units_status ON context_units(status);
CREATE INDEX idx_context_units_source_type ON context_units(source_type);
CREATE INDEX idx_context_units_created_at ON context_units(created_at DESC);

-- GIN indexes for JSONB and array queries
CREATE INDEX idx_context_units_tags ON context_units USING gin(tags);
CREATE INDEX idx_context_units_source_metadata ON context_units USING gin(source_metadata);
CREATE INDEX idx_context_units_atomic_statements ON context_units USING gin(atomic_statements);

-- Comments
COMMENT ON TABLE context_units IS 'Structured information units extracted from various sources';
COMMENT ON COLUMN context_units.source_type IS 'Type of source: email, api, file, or webhook';
COMMENT ON COLUMN context_units.source_id IS 'Unique identifier from source system';
COMMENT ON COLUMN context_units.atomic_statements IS 'JSONB array: [{"order": 1, "type": "fact", "speaker": null, "text": "..."}]';
COMMENT ON COLUMN context_units.qdrant_point_id IS 'Reference to vector in Qdrant (if stored)';

-- Example atomic_statements structure:
-- [
--   {"order": 1, "type": "fact", "speaker": null, "text": "Statement text"},
--   {"order": 2, "type": "question", "speaker": "Reporter", "text": "Question?"},
--   {"order": 3, "type": "answer", "speaker": "Mayor", "text": "Answer."}
-- ]
-- Allowed types: fact, question, answer, quote, context
